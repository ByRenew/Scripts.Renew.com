if _G.VOS ~= true then
    _G.VOS = true
    pcall(function()
local gui=Instance.new("ScreenGui",game:GetService("CoreGui"))
gui.IgnoreGuiInset=true
gui.ResetOnSpawn=false

local bg=Instance.new("Frame",gui)
bg.Size=UDim2.new(1,0,1,0)
bg.BackgroundColor3=Color3.fromRGB(0,0,0)
bg.BackgroundTransparency=0

local stars=Instance.new("ImageLabel",bg)
stars.Size=UDim2.new(1,0,1,0)
stars.Position=UDim2.new(0,0,0,0)
stars.BackgroundTransparency=1
stars.Image="rbxassetid://7016426377"
stars.ImageTransparency=0.2
stars.ScaleType=Enum.ScaleType.Tile
stars.TileSize=UDim2.new(0,100,0,100)

local title=Instance.new("ImageLabel",bg)
title.Size=UDim2.new(1,0,1,0)
title.Position=UDim2.new(0,0,-1,0)
title.BackgroundTransparency=1
title.Image="rbxassetid://108130047132840"
title.ImageTransparency=0
title.ScaleType=Enum.ScaleType.Fit

local sound=Instance.new("Sound",title)
sound.SoundId="rbxassetid://2661731024"
sound.Volume=0.5
sound.PlaybackSpeed=1.25
sound.Looped=true
sound:Play()

title:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,1,true)
task.wait(2)

title:TweenPosition(UDim2.new(0,0,-1,0),Enum.EasingDirection.In,Enum.EasingStyle.Quad,1,true)
task.wait(1)

gui:Destroy()
end)

    if typeof(task) ~= "table" or not task.wait then
        task = {}
        task.wait = wait
        task.spawn = function(f)
            coroutine.wrap(f)()
        end
    end

    local Players = game:GetService("Players")
    local UIS = game:GetService("UserInputService")
    local plr = Players.LocalPlayer
    local PlayerGui = plr:WaitForChild("PlayerGui")

    game.StarterGui:SetCore("SendNotification", {
        Title = "[VoidOS]",
        Text = "Press the VoidOS Icon.",
        Duration = 15
    })

    task.spawn(function()
        task.wait(0.2)
        local cg = game:GetService("CoreGui")
        local area = cg:FindFirstChild("RobloxGui") and cg.RobloxGui:FindFirstChild("NotificationArea")
        if area then
            for _, v in pairs(area:GetChildren()) do
                if v:IsA("Frame") and v.BackgroundColor3 ~= Color3.new(1, 1, 1) then
                    v.BackgroundColor3 = Color3.fromRGB(45, 44, 45)
                    Instance.new("UICorner", v).CornerRadius = UDim.new(0, 8)
                end
            end
        end
    end)

    local ScreenGui = Instance.new("ScreenGui", PlayerGui)
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Name = "VOSUI"

    local Button = Instance.new("TextButton", ScreenGui)
    Button.Size = UDim2.new(0, 40, 0, 40)
    Button.Position = UDim2.new(0, 15, 0, 10)
    Button.Text = "VOS"
    Button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    Button.TextColor3 = Color3.fromRGB(170, 80, 255)
    Button.Font = Enum.Font.FredokaOne
    Button.TextScaled = false
    Button.TextSize = 13

    local stroke = Instance.new("UIStroke", Button)
    stroke.Color = Color3.fromRGB(170, 80, 255)
    stroke.Thickness = 1
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    local buttonCorner = Instance.new("UICorner", Button)
    buttonCorner.CornerRadius = UDim.new(0.35, 0)

    local bar = Instance.new("Frame", ScreenGui)
    bar.Name = "Idk"
    bar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    bar.Size = UDim2.new(0.40, 0, 0, 40)
    bar.Position = UDim2.new(0.5, 0, 0.5, 0)
    bar.AnchorPoint = Vector2.new(0.5, 0.5)
    bar.Visible = false

    local barStroke = Instance.new("UIStroke", bar)
    barStroke.Color = Color3.fromRGB(170, 80, 255)
    barStroke.Thickness = 1
    barStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    local barCorner = Instance.new("UICorner", bar)
    barCorner.CornerRadius = UDim.new(0.25, 0)

    local inpWrap = Instance.new("Frame", bar)
    inpWrap.Name = "InputField"
    inpWrap.BackgroundTransparency = 1
    inpWrap.ClipsDescendants = true
    inpWrap.Position = UDim2.new(0, 30, 0, 0)
    inpWrap.Size = UDim2.new(1, -30, 1, 0)

    local input = Instance.new("TextBox", bar)
    input.Size = UDim2.new(0, 220, 0, 36)
    input.Position = UDim2.new(0.5, 0, 0.5, 0)
    input.AnchorPoint = Vector2.new(0.5, 0.5)
    input.PlaceholderText = "Enter cmds..."
    input.Text = ""
    input.Visible = true
    input.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
    input.TextColor3 = Color3.new(1, 1, 1)
    input.BorderSizePixel = 0
    input.Font = Enum.Font.FredokaOne
    input.TextScaled = false
    input.TextSize = 18
    input.PlaceholderColor3 = Color3.new(1, 1, 1)

    local textBoxCorner = Instance.new("UICorner", input)
    textBoxCorner.CornerRadius = UDim.new(0.25, 0)

    local function toggleBar()
        bar.Visible = not bar.Visible
        if bar.Visible then
            input:CaptureFocus()
        else
            input:ReleaseFocus()
        end
    end

    Button.MouseButton1Click:Connect(toggleBar)
    UIS.InputBegan:Connect(function(i, gp)
        if gp then return end
        if i.KeyCode == Enum.KeyCode.T then
            toggleBar()
        end
    end)
    input.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            bar.Visible = false
            input:ReleaseFocus()
        end
    end)

    local flyingState = {
        wasdfly = {
            active = false,
            bg = nil,
            bv = nil,
            conn1 = nil,
            conn2 = nil
        },
        mfly = {
            active = false,
            bv = nil,
            bg = nil,
            renderConn = nil
        }
    }

    local function fetch(url)
        local s, r = pcall(function()
            return game:HttpGet(url)
        end)
        if s and r then
            pcall(function()
                loadstring(r)()
            end)
        end
    end

    input.FocusLost:Connect(function(enter)
        if not enter then return end
        local txt = input.Text
        if txt == "" then return end

        local args = {}
        for word in txt:gmatch("%S+") do
            table.insert(args, word)
        end
        local cmd = args[1] and args[1]:lower() or ""

        if cmd == "wasdfly" then
            local state = flyingState.wasdfly
            if state.active then return end
            state.active = true
            local SPEED = 1
            local TELEPORT_FLY = false
            local USE_QE = true
            local lp = game:GetService("Players").LocalPlayer
            local mouse = lp:GetMouse()
            local cam = workspace.CurrentCamera
            local root = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
            if not root then
                repeat task.wait() until lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
                root = lp.Character:FindFirstChild("HumanoidRootPart")
            end
            local control = { F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0 }
            local flySpeed = 0
            state.bg = Instance.new("BodyGyro", root)
            state.bg.P = 9e4
            state.bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            state.bg.CFrame = root.CFrame
            state.bv = Instance.new("BodyVelocity", root)
            state.bv.Velocity = Vector3.zero
            state.bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            local function flyLoop()
                while state.active do
                    task.wait()
                    local hum = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid")
                    if hum then hum.PlatformStand = true end
                    if control.L + control.R ~= 0 or control.F + control.B ~= 0 or control.Q + control.E ~= 0 then
                        flySpeed = 50
                    else
                        flySpeed = 0
                    end
                    local dir = Vector3.zero
                    dir = dir + cam.CFrame.LookVector * (control.F + control.B)
                    dir = dir + ((cam.CFrame * CFrame.new(control.L + control.R, (control.Q + control.E) * 0.2, 0)).p - cam.CFrame.p)
                    state.bv.Velocity = dir * flySpeed
                    state.bg.CFrame = cam.CFrame
                    if TELEPORT_FLY and state.bv.Velocity.Magnitude > 1 then
                        root.CFrame = root.CFrame + state.bv.Velocity * task.wait()
                    end
                end
                if state.bv then state.bv:Destroy() end
                if state.bg then state.bg:Destroy() end
                local hum = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid")
                if hum then hum.PlatformStand = false end
            end
            state.conn1 = mouse.KeyDown:Connect(function(k)
                local s = SPEED
                if k == "w" then control.F = s end
                if k == "s" then control.B = -s end
                if k == "a" then control.L = -s end
                if k == "d" then control.R = s end
                if USE_QE and k == "q" then control.E = -s * 2 end
                if USE_QE and k == "e" then control.Q = s * 2 end
            end)
            state.conn2 = mouse.KeyUp:Connect(function(k)
                if k == "w" then control.F = 0 end
                if k == "s" then control.B = 0 end
                if k == "a" then control.L = 0 end
                if k == "d" then control.R = 0 end
                if k == "q" then control.E = 0 end
                if k == "e" then control.Q = 0 end
            end)
            task.spawn(flyLoop)
        elseif cmd == "lay" then
            local plr = game.Players.LocalPlayer
            local char = plr.Character or plr.CharacterAdded:Wait()
            local hum = char:WaitForChild("Humanoid")
            local hrp = char:WaitForChild("HumanoidRootPart")
            local uis = game:GetService("UserInputService")
            local laying = true
            local result = workspace:Raycast(hrp.Position, Vector3.new(0, -20, 0), RaycastParams.new())
            if result then
                local groundY = result.Position.Y
                local hrpY = hrp.Size.Y / 2
                hrp.CFrame = CFrame.new(hrp.Position.X, groundY + hrpY + 0.05, hrp.Position.Z) * CFrame.Angles(math.rad(90), 0, 0)
            end
            hum.PlatformStand = true
            uis.InputBegan:Connect(function(input, gpe)
                if laying and not gpe and (input.UserInputType == Enum.UserInputType.Touch or input.KeyCode == Enum.KeyCode.Space) then
                    laying = false
                end
            end)
            task.spawn(function()
                while laying do
                    if not hum.PlatformStand then
                        hum.PlatformStand = true
                    end
                    task.wait()
                end
                hum.PlatformStand = false
            end)
        elseif cmd == "speed" then
            local value = tonumber(args[2])
            if value then
                value = math.clamp(value, 1, 1000)
                local char = plr.Character or plr.CharacterAdded:Wait()
                local hum = char:FindFirstChildOfClass("Humanoid")
                if hum then
                    hum.WalkSpeed = value
                end
            end
        elseif cmd == "remotespy" then
            fetch("https://raw.githubusercontent.com/78n/SimpleSpy/refs/heads/main/SimpleSpySource.lua")
        elseif cmd == "dex" then
            fetch("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua")
        elseif cmd == "reset" then
            local char = plr.Character or plr.CharacterAdded:Wait()
            char:BreakJoints()
        elseif cmd == "rejoin" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
        elseif cmd == "serverhop" then
            local HttpService = game:GetService("HttpService")
            local servers = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?limit=100")
            for _, v in pairs(HttpService:JSONDecode(servers).data) do
                if v.playing < v.maxPlayers and v.id ~= game.JobId then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, v.id, plr)
                    break
                end
            end
        elseif cmd == "goto" or cmd:match("^/goto") then
            local targetName = args[2]
            if targetName then
                local function findTarget(name)
                    name = name:lower()
                    for _, p in ipairs(Players:GetPlayers()) do
                        if p ~= plr then
                            local uname = p.Name:lower()
                            local dname = p.DisplayName:lower()
                            if uname:find(name) or dname:find(name) then return p end
                        end
                    end
                    return nil
                end
                local target = findTarget(targetName)
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
                    end
                end
            end
        elseif cmd == "mfly" then
            local state = flyingState.mfly
            if state.active then return end
            state.active = true
            local TELEPORT_FLY = false
            local SPEED = 1
            local lp = game:GetService("Players").LocalPlayer
            local RunService = game:GetService("RunService")
            local function getRoot(char)
                return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("UpperTorso") or char:FindFirstChild("Torso")
            end
            local root = getRoot(lp.Character)
            local cam = workspace.CurrentCamera
            state.bv = Instance.new("BodyVelocity", root)
            state.bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            state.bv.Velocity = Vector3.zero
            state.bg = Instance.new("BodyGyro", root)
            state.bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            state.bg.P = 1000
            state.bg.D = 50
            local controlModule = require(lp.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
            state.renderConn = RunService.RenderStepped:Connect(function()
                if not state.active then return end
                local moveVec = controlModule:GetMoveVector()
                local speed = SPEED * 50
                local vel = Vector3.zero
                vel = vel + cam.CFrame.RightVector * moveVec.X * speed
                vel = vel - cam.CFrame.LookVector * moveVec.Z * speed
                state.bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                state.bv.Velocity = vel
                state.bg.CFrame = cam.CFrame
                local hum = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid")
                if hum then hum.PlatformStand = true end
                if TELEPORT_FLY and vel.Magnitude > 1 then
                    root.CFrame = root.CFrame + vel * RunService.RenderStepped:Wait()
                end
            end)
        elseif cmd == "unfly" then
            local state = flyingState.wasdfly
            if state.active then
                state.active = false
                if state.bv then state.bv:Destroy() end
                if state.bg then state.bg:Destroy() end
                if state.conn1 then state.conn1:Disconnect() end
                if state.conn2 then state.conn2:Disconnect() end
                local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
                if hum then hum.PlatformStand = false end
            end
            local mstate = flyingState.mfly
            if mstate.active then
                mstate.active = false
                if mstate.bv then mstate.bv:Destroy() end
                if mstate.bg then mstate.bg:Destroy() end
                if mstate.renderConn then mstate.renderConn:Disconnect() end
                local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
                if hum then hum.PlatformStand = false end
            end
            game.StarterGui:SetCore("SendNotification", {
                Title = "[VoidOS]",
                Text = "Flying disabled",
                Duration = 5
            })
        elseif cmd == "antifling" then
            local char = plr.Character
            if char then
                for _, v in pairs(char:GetDescendants()) do
                    if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
                        v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                    end
                end
                game.StarterGui:SetCore("SendNotification", {
                    Title = "[VoidOS]",
                    Text = "Anti-fling enabled.",
                    Duration = 5
                })
            end
        elseif cmd == "unantifling" then
            local char = plr.Character
            if char then
                for _, v in pairs(char:GetDescendants()) do
                    if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
                        v.CustomPhysicalProperties = PhysicalProperties.new(1, 0.3, 0.5)
                    end
                end
                game.StarterGui:SetCore("SendNotification", {
                    Title = "[VoidOS]",
                    Text = "Anti-fling disabled",
                    Duration = 5
                })
            end
        elseif cmd == "sit" then
            local plr = game.Players.LocalPlayer
            local char = plr.Character or plr.CharacterAdded:Wait()
            local hum = char:WaitForChild("Humanoid")
            hum.Sit = true
            local sitting = true
            hum.StateChanged:Connect(function(_, new)
                if sitting and new == Enum.HumanoidStateType.Jumping then
                    sitting = false
                end
            end)
            task.spawn(function()
                while sitting and hum and hum.Parent do
                    if not hum.Sit then
                        hum.Sit = true
                    end
                    task.wait(0.1)
                end
            end)
        elseif cmd == "godmode" then
            local char = plr.Character
            if char then
                for _, v in pairs(char:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.Anchored = false
                        v.CanCollide = true
                        v.Massless = false
                    end
                end
                char:BreakJoints()
                game.StarterGui:SetCore("SendNotification", {
                    Title = "[VoidOS]",
                    Text = "Godmode Enabled, Rejoin to Disable",
                    Duration = 5
                })
            end
        elseif cmd == "fireremotes" then
            local remotes = {}
            for _, obj in ipairs(game:GetDescendants()) do
                if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
                    table.insert(remotes, obj)
                end
            end
            for _, remote in ipairs(remotes) do
                pcall(function()
                    if remote:IsA("RemoteEvent") then
                        remote:FireServer()
                    elseif remote:IsA("RemoteFunction") then
                        remote:InvokeServer()
                    end
                end)
            end
        elseif cmd == "firetouchinterests" then
            local char = plr.Character or plr.CharacterAdded:Wait()
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp and firetouchinterest then
                for _, part in ipairs(workspace:GetDescendants()) do
                    if part:IsA("BasePart") and part:FindFirstChildWhichIsA("TouchTransmitter") then
                        firetouchinterest(hrp, part, 0)
                        firetouchinterest(hrp, part, 1)
                    end
                end
            end
        elseif cmd == "hitbox" then
            local size = tonumber(args[2]) or 10
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= plr and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local hrp = player.Character.HumanoidRootPart
                    hrp.Size = Vector3.new(size, size, size)
                    hrp.Transparency = 0.7
                    hrp.BrickColor = BrickColor.new("Really red")
                    hrp.Material = Enum.Material.Neon
                    hrp.CanCollide = false
                end
            end
        elseif cmd == "noclip" then
            local noclip = true
            game:GetService("RunService").Stepped:Connect(function()
                if noclip and plr.Character then
                    for _, v in pairs(plr.Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                        end
                    end
                end
            end)
        elseif cmd == "clip" then
            if plr.Character then
                for _, v in pairs(plr.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = true
                    end
                end
            end
        elseif cmd == "spin" then
            local speed = tonumber(args[2]) or 10
            local char = plr.Character or plr.CharacterAdded:Wait()
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                spawn(function()
                    while wait() do
                        hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(speed), 0)
                    end
                end)
            end
        elseif cmd == "view" then
            local targetName = args[2]
            for _, p in ipairs(Players:GetPlayers()) do
                if p ~= plr and p.Name:lower():find(targetName:lower()) then
                    workspace.CurrentCamera.CameraSubject = p.Character and p.Character:FindFirstChild("Humanoid")
                end
            end
        elseif cmd == "fixcam" then
            workspace.CurrentCamera.CameraSubject = plr.Character and plr.Character:FindFirstChild("Humanoid")
        elseif cmd == "fullbright" then
            local lighting = game:GetService("Lighting")
            lighting.Brightness = 10
            lighting.ClockTime = 12
            lighting.FogEnd = 1e10
            lighting.GlobalShadows = false
            lighting.OutdoorAmbient = Color3.new(1, 1, 1)
        elseif cmd == "unfullbright" then
            local lighting = game:GetService("Lighting")
            lighting.Brightness = 2
            lighting.ClockTime = 14
            lighting.FogEnd = 1000
            lighting.GlobalShadows = true
            lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
        elseif cmd == "esp" then
            for _, p in ipairs(Players:GetPlayers()) do
                if p ~= plr and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                    local espBox = Instance.new("BoxHandleAdornment")
                    espBox.Adornee = p.Character.HumanoidRootPart
                    espBox.Parent = p.Character.HumanoidRootPart
                    espBox.Size = Vector3.new(4, 6, 2)
                    espBox.Color3 = Color3.fromRGB(255, 0, 0)
                    espBox.Transparency = 0.5
                    espBox.AlwaysOnTop = true
                end
            end
        elseif cmd == "antiafk" then
            for _, v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
                v:Disable()
            end
        elseif cmd == "cmds" then
            local plr = game.Players.LocalPlayer
            local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
            gui.Name = "Cmds"
            gui.ResetOnSpawn = false
            local frame = Instance.new("Frame", gui)
            frame.Size = UDim2.new(0, 320, 0, 300)
            frame.Position = UDim2.new(0.02, 0, 0.25, 0)
            frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            frame.BorderSizePixel = 0
            frame.BackgroundTransparency = 0.15
            frame.Active = true
            frame.Draggable = true
            local title = Instance.new("TextLabel", frame)
            title.Size = UDim2.new(1, 0, 0, 30)
            title.Position = UDim2.new(0, 0, 0, 0)
            title.Text = "VoidOS Commands"
            title.TextColor3 = Color3.fromRGB(255, 255, 255)
            title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            title.Font = Enum.Font.GothamBold
            title.TextSize = 16
            title.BorderSizePixel = 0
            local list = Instance.new("ScrollingFrame", frame)
            list.Size = UDim2.new(1, 0, 1, -30)
            list.Position = UDim2.new(0, 0, 0, 30)
            list.CanvasSize = UDim2.new(0, 0, 0, 0)
            list.ScrollBarThickness = 4
            list.BackgroundTransparency = 1
            list.BorderSizePixel = 0
            local layout = Instance.new("UIListLayout", list)
            layout.SortOrder = Enum.SortOrder.LayoutOrder
            layout.Padding = UDim.new(0, 3)
            local commands = {
                "NOTE:",
                "Type the commands in lowercase",
                "dex           - Dex Explorer", 
                "remotespy     - SimpleSpy V3",
                "cmds          - Shows this List",
                "reset         - Force Reset",
                "credits       - Shows Credits",
                "serverhop     - Hops to Different Server",
                "rejoin        - Joins the Same Server",
                "goto [player]   - Teleports to the Selected Player",
                "godmode       - Makes you Unkillable",
                "antifling     - Immunity against Fling Exploits",
                "unantifling   - Removes Fling Immunity",
                "sit           - Forces you to Sit",
                "lay           - Makes you Lay Down",
                "mfly          - Mobile Fly",
                "wasdfly       - WASD + QE Keys Fly",
                "unfly         - Disable Fly",
                "speed [value]  - Change Walkspeed",
                "fireremotes     - Fire ALL Remotes",
                "firetouchinterests - Fire ALL Touch Interests",
                "hitbox [value]   - Expands Hitbox",
                "noclip          - Self Explanatory",
                "clip           - Disables Noclip",
                "spin [value]   - Make your avatar spin",
                "view [player]  - Spectate a Player",
                "fixcam          - Fixes Camera",
                "fullbright [Client]   - Make the Place Bright",
                "unfullbright [Client] - Restore Normal Brightness",
                "esp                 - Highlights all Players",
                "antiafk            - Prevents being kicked while afk"
            }
            for _, text in ipairs(commands) do
                local label = Instance.new("TextLabel", list)
                label.Size = UDim2.new(1, -10, 0, 25)
                label.Text = text
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.BackgroundTransparency = 1
                label.Font = Enum.Font.Gotham
                label.TextSize = 14
            end
            task.defer(function()
                list.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 5)
            end)
        elseif cmd == "credits" then
            local plr = game.Players.LocalPlayer
            local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
            gui.Name = "credits"
            gui.ResetOnSpawn = false
            local frame = Instance.new("Frame", gui)
            frame.Size = UDim2.new(0, 350, 0, 200)
            frame.Position = UDim2.new(0.02, 0, 0.25, 0)
            frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            frame.BorderSizePixel = 0
            frame.BackgroundTransparency = 0.15
            frame.Active = true
            frame.Draggable = true
            local title = Instance.new("TextLabel", frame)
            title.Size = UDim2.new(1, 0, 0, 30)
            title.Position = UDim2.new(0, 0, 0, 0)
            title.Text = "📄 Credits"
            title.TextColor3 = Color3.fromRGB(255, 255, 255)
            title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            title.Font = Enum.Font.GothamBold
            title.TextSize = 16
            title.BorderSizePixel = 0
            local list = Instance.new("ScrollingFrame", frame)
            list.Size = UDim2.new(1, 0, 1, -30)
            list.Position = UDim2.new(0, 0, 0, 30)
            list.CanvasSize = UDim2.new(0, 0, 0, 0)
            list.ScrollBarThickness = 4
            list.BackgroundTransparency = 1
            list.BorderSizePixel = 0
            local layout = Instance.new("UIListLayout", list)
            layout.SortOrder = Enum.SortOrder.LayoutOrder
            layout.Padding = UDim.new(0, 3)
            local credits = {
                "Owner & Developer - Dhelan",
                "Co-Owner & Idea Guy - xlox262"
            }
            for _, text in ipairs(credits) do
                local label = Instance.new("TextLabel", list)
                label.Size = UDim2.new(1, -10, 0, 25)
                label.Text = text
                label.TextColor3 = Color3.fromRGB(255, 255, 255)
                label.BackgroundTransparency = 1
                label.Font = Enum.Font.Gotham
                label.TextSize = 14
            end
            task.defer(function()
                list.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 5)
            end)
        else
            local success, func = pcall(function()
                return loadstring(txt)
            end)
            if success and typeof(func) == "function" then
                pcall(func)
            end
        end
        input.Text = ""
    end)
end
